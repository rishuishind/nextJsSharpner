{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rishabh/Desktop/Rishu/sharpner/nextJs/pages/[meetupId]/index.js\",\n    _this = this;\n\nvar showMeetup = function showMeetup(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.dataimage,\n      alt: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: props.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\nexport var __N_SSG = true;\nexport default showMeetup;","map":{"version":3,"sources":["/home/rishabh/Desktop/Rishu/sharpner/nextJs/pages/[meetupId]/index.js"],"names":["showMeetup","props","dataimage","title","address"],"mappings":";;;;;;AACA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAE1B,sBAAO;AAAA,4BACH;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACC,SAAhB;AAA2B,MAAA,GAAG,EAAED,KAAK,CAACE;AAAtC;AAAA;AAAA;AAAA;AAAA,aADG,eAEH;AAAA,gBAAKF,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,aAFG,eAGH;AAAA,gBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,aAHG;AAAA,kBAAP;AAKH,CAPD;;;AA+BA,eAAeJ,UAAf","sourcesContent":["import MongoClient from \"mongodb/lib/mongo_client\";\nconst showMeetup = (props) => {\n\n    return <>\n        <img src={props.dataimage} alt={props.title} />\n        <h3>{props.title}</h3>\n        <h4>{props.address}</h4>\n    </>\n}\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb://rishuishind:saras123@ac-bqc4kzx-shard-00-00.mapsrxn.mongodb.net:27017,ac-bqc4kzx-shard-00-01.mapsrxn.mongodb.net:27017,ac-bqc4kzx-shard-00-02.mapsrxn.mongodb.net:27017/?ssl=true&replicaSet=atlas-1i7v8o-shard-0&authSource=admin&retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupCollection = db.collection('meetups');\n    const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\n    return {\n        fallback: false,\n        paths: meetups.map((meetup) => ({ params: { meetupId: meetup._id.toString() } }))\n    }\n}\nexport async function getStaticProps(context) {\n    const id = context.params.meetupId;\n    const client = await MongoClient.connect('mongodb://rishuishind:saras123@ac-bqc4kzx-shard-00-00.mapsrxn.mongodb.net:27017,ac-bqc4kzx-shard-00-01.mapsrxn.mongodb.net:27017,ac-bqc4kzx-shard-00-02.mapsrxn.mongodb.net:27017/?ssl=true&replicaSet=atlas-1i7v8o-shard-0&authSource=admin&retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupCollection = db.collection('meetups');\n    const data = await meetupCollection.findOne({ _id: id });\n    client.close();\n    return {\n        props: {\n            data: data\n        }\n    }\n}\nexport default showMeetup"]},"metadata":{},"sourceType":"module"}